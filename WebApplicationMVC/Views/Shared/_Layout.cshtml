@using WebApplicationMVC.Views.Helpers
@using WebApplicationMVC.Models
@using SmartHome
@model DeviceDataView

<!DOCTYPE html>
<html>
<head>
    <title>Index</title>
    <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css" />
    <link href="~/Content/index.css" rel="stylesheet" />
    <script src="~/Scripts/jquery-1.10.2.min.js"></script>
</head>
<body>
    <div class="container header">
        <header>
            <div class="row">
                <img class="col-xs-3 img-responsive vcenter" id="imageHeader" src="/Content/SmaryHomeLogo.png" />
                <!--
                --------------->
                <h1 class="col-xs-8 vcenter" id="head-list">Smart System Home Controls</h1>
            </div>
        </header>
    </div>
    <main class="container ">
        <div class="">
            <menu class="row ">

                @{
                    string cssClassSizeImageButton = " img-responsive ";

                }
                @Html.ActionLinkImage("create", Url.Content("~/Content/createDevice.png"), "/Main/CreateDevice", "col-xs-1 devicePadding text-center deviceBorder buttonCreate", cssClassSizeImageButton, "Создать новое устройство", "Создать устройство")

                @for (int i = 0; i < Model.DeviceList.Count; i++)
                {
                    IDevicable device = Model.DeviceList[i];
                    string cssClassDevice;
                    cssClassDevice = "col-xs-1 devicePadding deviceBorder deviceOn";
                    if (device.State == false)
                    {
                        cssClassDevice = "col-xs-1 devicePadding deviceBorder deviceOff";
                    }
                    string imageIconDevice = Model.LinkIconDevice(device);
                    string urlIconDevice = Url.Content(imageIconDevice);

                    @Html.ActionLinkImage("device" + device.Name, urlIconDevice, "/Main/ActiveDevice/" + device.Name, cssClassDevice, cssClassSizeImageButton, device.Name, device.Name);
                }


            </menu>
        </div>
        @RenderBody()
        <div id="result">

        </div>

    </main>
    <footer class="container footer">
        <div class="text-center myContact">
            <address class="footer-address">
                <a href="">ejen2008@mail.ru</a>
            </address>
            <p class="footer-address">&copy;Войтов Е.П., 2017 г.</p>
        </div>
    </footer>
    <script>
        $(function () {
            var actionLink = $("article").find("a"); //выбираем все картинки ссылки
            var button = $("article").find("button");//выбираем все кнопки
            //actionLink.on("click", function (event) {
            //    event.preventDefault();
            //    var buttonId = this.id;
            //    $.ajax({
            //        url: "/api/values/" + buttonId,
            //        type: "PUT",
            //        success: function (data) {
            //            ButtonClikc (buttonId, data);
            //        }
            //    });
            //});
            button.on("click", function (event) {
                event.preventDefault();
                var buttonId = this.value;
                var textBox = TextBoxData(buttonId);
                alert("Была нажата кнопка");
                //alert("Кнопка которая была нажата: " + textBox);
                $.ajax({
                    url: "/api/values/" + buttonId,
                    data: { "": textBox },
                    type: "PUT",
                    success: function (data) {
                        //ButtonClikc(buttonId, data);
                        //alert("Кнопка которая была нажата:" + buttonId + " Данные с сервера: " + data);
                        alert("Пришел ответ " + data);
                    }
                });
            });





            function ButtonClikc(buttonId, data) {
                var textEror = $("#text-error").eq(0);


                if (data === "deviceErrorStateFalse") {
                    textEror.html("Устройство выкл.");

                }
                else {
                    textEror.html("<br />");

                    switch (buttonId) {
                        case "delete":
                            {
                                alert("delete");
                                break;
                            }
                        case "onOff":
                            {
                                var buttonOnOff = $("#onOff");
                                var nameDevice = $("#nameDevice").html();
                                var deviceTitle = $("#deviceIcon");
                                if (data === "True") {
                                    buttonOnOff.children().eq(0).removeClass("btn-danger");
                                    buttonOnOff.children().eq(0).addClass("btn-success imageButtonIcon");
                                    buttonOnOff.attr("title", "Выключить устройство");
                                    deviceTitle.attr("title", nameDevice + " вкл.");
                                }
                                else {
                                    buttonOnOff.children().eq(0).removeClass("btn-success");
                                    buttonOnOff.children().eq(0).addClass("btn-danger imageButtonIcon");
                                    buttonOnOff.attr("title", "Включить устройство");
                                    deviceTitle.attr("title", nameDevice + " выкл.");
                                }
                                //alert("Device state: " + data + " " + buttonOnOff.html());
                                break;
                            }
                        case "volumeDown":
                        case "volumeUp":
                        case "volumeMute":
                            {
                                $("#TextBoxVolume").val(data);
                                break;
                            }
                        case "chanelPrevios":
                        case "chanelNext":
                            {
                                $("#TextBoxSwich").val(data);
                                break;
                            }
                        case "tempDown":
                        case "tempUp":
                            {
                                $("#TextBoxTemp").val(data);
                                break;
                            }
                        case "bassDown":
                        case "bassUp":
                            {
                                $("#TextBoxBass").val(data);
                                break;
                            }
                        case "speedAirLow":
                        case "speedAirMedium":
                        case "speedAirHight":
                            {
                                break;
                            }
                    }
                }
            }


            function TextBoxData(buttonId) {
                var data;
                switch (buttonId) {
                    case "volume":
                        {
                            data = $("#TextBoxVolume").val();
                            break;
                        }
                    case "current":
                        {
                            data = $("#TextBoxSwich").val();
                            break;
                        }
                    case "temperature":
                        {
                            data = $("#TextBoxTemp").val();
                            break;
                        }
                    case "bass":
                        {
                            data = $("#TextBoxBass").val();
                            break;
                        }
                }
                return data;
            }






        });
    </script>
</body>
</html>
